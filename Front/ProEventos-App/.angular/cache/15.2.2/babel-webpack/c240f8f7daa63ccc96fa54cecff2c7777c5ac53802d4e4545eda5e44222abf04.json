{"ast":null,"code":"export class ValidatorField {\n  static mustMatch(controlName, matchingControlName) {\n    return group => {\n      const formGroup = group;\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        return null;\n      }\n      if (control.value != matchingControl.value) {\n        matchingControl.setErrors({\n          mustMatch: true\n        });\n      } else {\n        matchingControl.setErrors(null);\n      }\n      return null;\n    };\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,cAAc;EACzB,OAAOC,SAAS,CAACC,WAAmB,EAAEC,mBAA2B;IAC/D,OAAOC,KAAsB,IAAI;MAC/B,MAAMC,SAAS,GAAGD,KAAkB;MACpC,MAAME,OAAO,GAAGD,SAAS,CAACE,QAAQ,CAACL,WAAW,CAAC;MAC/C,MAAMM,eAAe,GAAGH,SAAS,CAACE,QAAQ,CAACJ,mBAAmB,CAAC;MAE/D,IAAGK,eAAe,CAACC,MAAM,IAAI,CAACD,eAAe,CAACC,MAAM,CAACR,SAAS,EAAC;QAC7D,OAAO,IAAI;;MAGb,IAAGK,OAAO,CAACI,KAAK,IAAIF,eAAe,CAACE,KAAK,EAAC;QACxCF,eAAe,CAACG,SAAS,CAAC;UAACV,SAAS,EAAE;QAAI,CAAC,CAAC;OAC7C,MACG;QACFO,eAAe,CAACG,SAAS,CAAC,IAAI,CAAC;;MAEjC,OAAO,IAAI;IACb,CAAC;EACH","names":["ValidatorField","mustMatch","controlName","matchingControlName","group","formGroup","control","controls","matchingControl","errors","value","setErrors"],"sourceRoot":"","sources":["C:\\Users\\DanielAristofanesCor\\Desktop\\ProEventos\\Front\\ProEventos-App\\src\\helpers\\ValidatorField.ts"],"sourcesContent":["import { AbstractControl, FormGroup } from '@angular/forms'\n\nexport class ValidatorField {\n  static mustMatch(controlName: string, matchingControlName: string): any {\n    return(group: AbstractControl) => {\n      const formGroup = group as FormGroup;\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if(matchingControl.errors && !matchingControl.errors.mustMatch){\n        return null;\n      }\n\n      if(control.value != matchingControl.value){\n        matchingControl.setErrors({mustMatch: true});\n      }\n      else{\n        matchingControl.setErrors(null)\n      }\n      return null;\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}